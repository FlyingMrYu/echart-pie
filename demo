<template>
  <div class="share-chart-content">
    <div :id="'chartpieBox'+id" :style="{width: '100%',height: `${height}px`}"></div>
  </div>
</template>
<script>
import echarts from "echarts";
export default {
  name: "sharePieChart",
  props: ["id", "height", "pieChart"],
  watch:{
    pieChart(val){
      console.log(val,this.pieChart,'fff');
      this.init();
    }
  },
  methods: {
    init() {
      var _that = this;
      this.chartLine = echarts.init(
        document.getElementById(`chartpieBox${this.id}`)
      );
      var option = {
        tooltip: {
          trigger: "item",
          formatter: "{a} <br/>{b}: {c} ({d}%)",
        },
        grid: {
          top: 0,
        },
        color: [
          "#695bea",
          "#82e2e4",
          "#ffd86f",
          "#74b4fc",
          "#a3e4ff",
          "#8481f7"
        ],
        legend: {
          itemGap: 18,
          itemWidth: 4,
          left:0,
          top:'center',
          orient: 'vertical',
          itemHeight: 8,
          padding: [10, 10],
          textStyle: {
            color: "#fff"
          },
          data: this.pieChart.legendData,
          formatter: function(name) {
            // 获取legend显示内容
            let data = option.series[0].data;
            let total = 0;
            let tarValue = 0;
            for (let i = 0, l = data.length; i < l; i++) {
              total += data[i].value;
              if (data[i].name == name) {
                tarValue = data[i].value;
              }
            }
            let p = ((tarValue / total) * 100).toFixed(2);
            return name + " " + " " + p + "%";
          }
        },
        series: [
          {
            name: "",
            type: "pie",
            radius: ["45%", "60%"],
            center: ["60%", "50%"],
            avoidLabelOverlap: false,
            hoverAnimation: false,
            silent: false,
            label: {
              normal: {
                show: true,
                position: "center",
                formatter: function() {
                  return `${_that.pieChart.totalNum}\n标煤`; 
                },
                textStyle: {
                  fontSize: 16,
                  color:'#fff'
                }
              }
            },
            labelLine: {
              show: false
            },
           data: [
                {value: 335, name: '直接访问'},
                {value: 310, name: '邮件营销'},
                {value: 234, name: '联盟广告'},
                {value: 135, name: '视频广告'},
                {value: 1548, name: '搜索引擎'}
            ]
          }
        ]
      };
      // 使用刚指定的配置项和数据显示图表。
      this.chartLine.setOption(option);
      var _that = this;
      window.onresize = function() {
        console.log(this.chartLine, " this.chartLine");
        _that.chartLine.resize();
      };
    }
  },
  mounted() {
    // if(this.pieChart){
    //   this.init();
    // }
  }
};
</script>

<style scoped lang="scss">
.share-chart-content {
  width: 100%;
  height: 100%;
}
</style>

